% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/Vowpal_extraction7.R
\name{csv2vw}
\alias{csv2vw}
\title{Function reads a dataset in chunks and transforms it into Vowpal Wabbit format.}
\usage{
csv2vw(infile, outfile, n = 1e+06, id = NULL, target = NULL,
  weights = NULL, start = 0, int_numeric = NULL, char_factor = NULL,
  ...)
}
\arguments{
\item{infile}{Name of the dataset in csv format to transform.}

\item{outfile}{Name of the output file in Vowpal Wabbit format.}

\item{n}{Size of the chunk (number of lines) that is read at once.}

\item{id}{Name of the id column}

\item{target}{Name of the target variable column}

\item{weights}{External vector of weights to be specified.}

\item{start}{How many lines to skip.}

\item{char_factor,int_numeric}{Optional partion of all column names into
two groups.}

\item{...}{Additional parameters to be passed to data.table fread function.}
}
\description{
Function reads a dataset in chunks and transforms it into Vowpal Wabbit format
calling functions change_NA and dt2vw.
It loops over columns, each type of column data type it treats differently.
Character and factor variables are outputed as "columnname_value",
numeric variables are outputed as "columnname: value". It is possible to
specify how to treat columns (e.g. in order to treat numeric variable as factor)
but it is not necessary.
}
\examples{
\dontrun{
csv2vw(infile= "admission.csv", outfile = "admissionvw.txt", target = "admit",
     weights = c(0,1) ) #weights need to as long as the data
csv2vw(infile= "admission.csv", outfile = "admissionvw.txt", id = "id",  weights= weights)
#weights ar only for training, i.e. target variable must be present
}
}

