% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/new_factor_function13.R
\name{add.factorfun}
\alias{add.factorfun}
\title{Calculates a mean (or other function) of response of a factor variable.}
\usage{
add.factorfun(source_data, source_response, FUN = mean, target_data = NULL,
  min_count = 1)
}
\arguments{
\item{source_data}{Column with data to be interpreted as factor.}

\item{source_response}{Column with target values {0,1}.}

\item{FUN}{Function for aggregation, default is mean.}

\item{target_data}{Column with reference data for output.}

\item{min_count}{Threshold of minimal occurence of a level.}
}
\description{
Calculates a mean (or other function) of response for each observation
of a factor variable target_data given that factor variable source_data
had response source_response. For training data source_data and
target_data coincide. Function allows not to consider levels with
little occurence in the train set. Category "other" is created for all
such observations and function of overall response in this category is provided.
}
\examples{
admission <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
gre_mean_success <- add.factorfun(source_data = admission$gre,
     source_response = admission$admit, min_count = 10)
table(gre_mean_success)
admission1 <- admission[1:200,]
admission2 <- admission[201:400,]
table(as.factor(admission1$gre))
table(as.factor(admission2$gre))
gre_mean_success2 <- add.factorfun(source_data = admission1$gre,
    source_response = admission1$admit, target_data = admission2$gre,
    min_count = 5)
gre_mean_success2[105] #level 220 not included in admission1, thus we get NA
}

